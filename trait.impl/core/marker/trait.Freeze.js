(function() {var implementors = {
"stark_evm_adapter":[["impl Freeze for <a class=\"struct\" href=\"stark_evm_adapter/annotation_parser/struct.AnnotatedProof.html\" title=\"struct stark_evm_adapter::annotation_parser::AnnotatedProof\">AnnotatedProof</a>",1,["stark_evm_adapter::annotation_parser::AnnotatedProof"]],["impl Freeze for <a class=\"struct\" href=\"stark_evm_adapter/annotation_parser/struct.MerkleLine.html\" title=\"struct stark_evm_adapter::annotation_parser::MerkleLine\">MerkleLine</a>",1,["stark_evm_adapter::annotation_parser::MerkleLine"]],["impl Freeze for <a class=\"struct\" href=\"stark_evm_adapter/annotation_parser/struct.FriLine.html\" title=\"struct stark_evm_adapter::annotation_parser::FriLine\">FriLine</a>",1,["stark_evm_adapter::annotation_parser::FriLine"]],["impl Freeze for <a class=\"struct\" href=\"stark_evm_adapter/annotation_parser/struct.FriXInvLine.html\" title=\"struct stark_evm_adapter::annotation_parser::FriXInvLine\">FriXInvLine</a>",1,["stark_evm_adapter::annotation_parser::FriXInvLine"]],["impl Freeze for <a class=\"struct\" href=\"stark_evm_adapter/annotation_parser/struct.CommitmentLine.html\" title=\"struct stark_evm_adapter::annotation_parser::CommitmentLine\">CommitmentLine</a>",1,["stark_evm_adapter::annotation_parser::CommitmentLine"]],["impl Freeze for <a class=\"struct\" href=\"stark_evm_adapter/annotation_parser/struct.EvalPointLine.html\" title=\"struct stark_evm_adapter::annotation_parser::EvalPointLine\">EvalPointLine</a>",1,["stark_evm_adapter::annotation_parser::EvalPointLine"]],["impl Freeze for <a class=\"struct\" href=\"stark_evm_adapter/annotation_parser/struct.FriExtras.html\" title=\"struct stark_evm_adapter::annotation_parser::FriExtras\">FriExtras</a>",1,["stark_evm_adapter::annotation_parser::FriExtras"]],["impl Freeze for <a class=\"struct\" href=\"stark_evm_adapter/annotation_parser/struct.FriMerklesOriginal.html\" title=\"struct stark_evm_adapter::annotation_parser::FriMerklesOriginal\">FriMerklesOriginal</a>",1,["stark_evm_adapter::annotation_parser::FriMerklesOriginal"]],["impl Freeze for <a class=\"struct\" href=\"stark_evm_adapter/annotation_parser/struct.SplitProofs.html\" title=\"struct stark_evm_adapter::annotation_parser::SplitProofs\">SplitProofs</a>",1,["stark_evm_adapter::annotation_parser::SplitProofs"]],["impl Freeze for <a class=\"enum\" href=\"stark_evm_adapter/errors/enum.ParseError.html\" title=\"enum stark_evm_adapter::errors::ParseError\">ParseError</a>",1,["stark_evm_adapter::errors::ParseError"]],["impl Freeze for <a class=\"struct\" href=\"stark_evm_adapter/fri_merkle_statement/struct.FRIMerkleStatement.html\" title=\"struct stark_evm_adapter::fri_merkle_statement::FRIMerkleStatement\">FRIMerkleStatement</a>",1,["stark_evm_adapter::fri_merkle_statement::FRIMerkleStatement"]],["impl Freeze for <a class=\"struct\" href=\"stark_evm_adapter/merkle_statement/struct.MerkleStatement.html\" title=\"struct stark_evm_adapter::merkle_statement::MerkleStatement\">MerkleStatement</a>",1,["stark_evm_adapter::merkle_statement::MerkleStatement"]],["impl Freeze for <a class=\"struct\" href=\"stark_evm_adapter/serialization/struct.SerializeU256AsNumber.html\" title=\"struct stark_evm_adapter::serialization::SerializeU256AsNumber\">SerializeU256AsNumber</a>",1,["stark_evm_adapter::serialization::SerializeU256AsNumber"]]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()